name: Nyawork Docker Build

on:
  workflow_dispatch:
  push:
    branches:
      - 'nya'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/formbricks?schema=public"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Generate Random NEXTAUTH_SECRET
        run: |
          SECRET=$(openssl rand -hex 32)
          echo "NEXTAUTH_SECRET=$SECRET" >> $GITHUB_ENV

      - name: Generate Random ENCRYPTION_KEY
        run: |
          SECRET=$(openssl rand -hex 32)
          echo "ENCRYPTION_KEY=$SECRET" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3 # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5 # v5.0.0
        with:
          context: .
          file: ./apps/web/Dockerfile
          # platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NEXTAUTH_SECRET=${{ env.NEXTAUTH_SECRET }}
            DATABASE_URL=${{ env.DATABASE_URL }}
            ENCRYPTION_KEY=${{ env.ENCRYPTION_KEY }}

      - name: Send success webhook
        run: curl ${{ secrets.DOCKER_BUILD_SUCCESS_WEBHOOK }}?subject=NyaQuest%20Formbricks%20%E9%95%9C%E5%83%8F
